// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.5.1
// source: calculator/sumpb/sum.proto

package sumpb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Operands struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operand1 int64 `protobuf:"varint,1,opt,name=operand1,proto3" json:"operand1,omitempty"`
	Operand2 int64 `protobuf:"varint,2,opt,name=operand2,proto3" json:"operand2,omitempty"`
}

func (x *Operands) Reset() {
	*x = Operands{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_sumpb_sum_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operands) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operands) ProtoMessage() {}

func (x *Operands) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_sumpb_sum_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operands.ProtoReflect.Descriptor instead.
func (*Operands) Descriptor() ([]byte, []int) {
	return file_calculator_sumpb_sum_proto_rawDescGZIP(), []int{0}
}

func (x *Operands) GetOperand1() int64 {
	if x != nil {
		return x.Operand1
	}
	return 0
}

func (x *Operands) GetOperand2() int64 {
	if x != nil {
		return x.Operand2
	}
	return 0
}

type SumRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operands *Operands `protobuf:"bytes,1,opt,name=operands,proto3" json:"operands,omitempty"`
}

func (x *SumRequest) Reset() {
	*x = SumRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_sumpb_sum_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumRequest) ProtoMessage() {}

func (x *SumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_sumpb_sum_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumRequest.ProtoReflect.Descriptor instead.
func (*SumRequest) Descriptor() ([]byte, []int) {
	return file_calculator_sumpb_sum_proto_rawDescGZIP(), []int{1}
}

func (x *SumRequest) GetOperands() *Operands {
	if x != nil {
		return x.Operands
	}
	return nil
}

type OperandAvg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operand int32 `protobuf:"varint,1,opt,name=operand,proto3" json:"operand,omitempty"`
}

func (x *OperandAvg) Reset() {
	*x = OperandAvg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_sumpb_sum_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OperandAvg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperandAvg) ProtoMessage() {}

func (x *OperandAvg) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_sumpb_sum_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperandAvg.ProtoReflect.Descriptor instead.
func (*OperandAvg) Descriptor() ([]byte, []int) {
	return file_calculator_sumpb_sum_proto_rawDescGZIP(), []int{2}
}

func (x *OperandAvg) GetOperand() int32 {
	if x != nil {
		return x.Operand
	}
	return 0
}

type SumResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int64 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *SumResponse) Reset() {
	*x = SumResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_sumpb_sum_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SumResponse) ProtoMessage() {}

func (x *SumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_sumpb_sum_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SumResponse.ProtoReflect.Descriptor instead.
func (*SumResponse) Descriptor() ([]byte, []int) {
	return file_calculator_sumpb_sum_proto_rawDescGZIP(), []int{3}
}

func (x *SumResponse) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

type Operand_Number struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operand int64 `protobuf:"varint,1,opt,name=operand,proto3" json:"operand,omitempty"`
}

func (x *Operand_Number) Reset() {
	*x = Operand_Number{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_sumpb_sum_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Operand_Number) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operand_Number) ProtoMessage() {}

func (x *Operand_Number) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_sumpb_sum_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operand_Number.ProtoReflect.Descriptor instead.
func (*Operand_Number) Descriptor() ([]byte, []int) {
	return file_calculator_sumpb_sum_proto_rawDescGZIP(), []int{4}
}

func (x *Operand_Number) GetOperand() int64 {
	if x != nil {
		return x.Operand
	}
	return 0
}

type DecomposenumberRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operand_Number *Operand_Number `protobuf:"bytes,1,opt,name=operand_Number,json=operandNumber,proto3" json:"operand_Number,omitempty"`
}

func (x *DecomposenumberRequest) Reset() {
	*x = DecomposenumberRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_sumpb_sum_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecomposenumberRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecomposenumberRequest) ProtoMessage() {}

func (x *DecomposenumberRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_sumpb_sum_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecomposenumberRequest.ProtoReflect.Descriptor instead.
func (*DecomposenumberRequest) Descriptor() ([]byte, []int) {
	return file_calculator_sumpb_sum_proto_rawDescGZIP(), []int{5}
}

func (x *DecomposenumberRequest) GetOperand_Number() *Operand_Number {
	if x != nil {
		return x.Operand_Number
	}
	return nil
}

type DecomposenumberResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int64 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *DecomposenumberResponse) Reset() {
	*x = DecomposenumberResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_sumpb_sum_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecomposenumberResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecomposenumberResponse) ProtoMessage() {}

func (x *DecomposenumberResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_sumpb_sum_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecomposenumberResponse.ProtoReflect.Descriptor instead.
func (*DecomposenumberResponse) Descriptor() ([]byte, []int) {
	return file_calculator_sumpb_sum_proto_rawDescGZIP(), []int{6}
}

func (x *DecomposenumberResponse) GetResult() int64 {
	if x != nil {
		return x.Result
	}
	return 0
}

type ComputeAverageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperandAvg *OperandAvg `protobuf:"bytes,1,opt,name=operandAvg,proto3" json:"operandAvg,omitempty"`
}

func (x *ComputeAverageRequest) Reset() {
	*x = ComputeAverageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_sumpb_sum_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeAverageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeAverageRequest) ProtoMessage() {}

func (x *ComputeAverageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_sumpb_sum_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeAverageRequest.ProtoReflect.Descriptor instead.
func (*ComputeAverageRequest) Descriptor() ([]byte, []int) {
	return file_calculator_sumpb_sum_proto_rawDescGZIP(), []int{7}
}

func (x *ComputeAverageRequest) GetOperandAvg() *OperandAvg {
	if x != nil {
		return x.OperandAvg
	}
	return nil
}

type ComputeAverageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result float64 `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *ComputeAverageResponse) Reset() {
	*x = ComputeAverageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_sumpb_sum_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputeAverageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputeAverageResponse) ProtoMessage() {}

func (x *ComputeAverageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_sumpb_sum_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputeAverageResponse.ProtoReflect.Descriptor instead.
func (*ComputeAverageResponse) Descriptor() ([]byte, []int) {
	return file_calculator_sumpb_sum_proto_rawDescGZIP(), []int{8}
}

func (x *ComputeAverageResponse) GetResult() float64 {
	if x != nil {
		return x.Result
	}
	return 0
}

type FindmaxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Num int32 `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *FindmaxRequest) Reset() {
	*x = FindmaxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_sumpb_sum_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindmaxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindmaxRequest) ProtoMessage() {}

func (x *FindmaxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_sumpb_sum_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindmaxRequest.ProtoReflect.Descriptor instead.
func (*FindmaxRequest) Descriptor() ([]byte, []int) {
	return file_calculator_sumpb_sum_proto_rawDescGZIP(), []int{9}
}

func (x *FindmaxRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type FindmaxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result int32 `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *FindmaxResponse) Reset() {
	*x = FindmaxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_sumpb_sum_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindmaxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindmaxResponse) ProtoMessage() {}

func (x *FindmaxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_sumpb_sum_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindmaxResponse.ProtoReflect.Descriptor instead.
func (*FindmaxResponse) Descriptor() ([]byte, []int) {
	return file_calculator_sumpb_sum_proto_rawDescGZIP(), []int{10}
}

func (x *FindmaxResponse) GetResult() int32 {
	if x != nil {
		return x.Result
	}
	return 0
}

type SquareRootRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *SquareRootRequest) Reset() {
	*x = SquareRootRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_sumpb_sum_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SquareRootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SquareRootRequest) ProtoMessage() {}

func (x *SquareRootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_sumpb_sum_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SquareRootRequest.ProtoReflect.Descriptor instead.
func (*SquareRootRequest) Descriptor() ([]byte, []int) {
	return file_calculator_sumpb_sum_proto_rawDescGZIP(), []int{11}
}

func (x *SquareRootRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type SquareRootResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NumberRoot float64 `protobuf:"fixed64,1,opt,name=number_root,json=numberRoot,proto3" json:"number_root,omitempty"`
}

func (x *SquareRootResponse) Reset() {
	*x = SquareRootResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculator_sumpb_sum_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SquareRootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SquareRootResponse) ProtoMessage() {}

func (x *SquareRootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculator_sumpb_sum_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SquareRootResponse.ProtoReflect.Descriptor instead.
func (*SquareRootResponse) Descriptor() ([]byte, []int) {
	return file_calculator_sumpb_sum_proto_rawDescGZIP(), []int{12}
}

func (x *SquareRootResponse) GetNumberRoot() float64 {
	if x != nil {
		return x.NumberRoot
	}
	return 0
}

var File_calculator_sumpb_sum_proto protoreflect.FileDescriptor

var file_calculator_sumpb_sum_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x73, 0x75, 0x6d,
	0x70, 0x62, 0x2f, 0x73, 0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x73, 0x75,
	0x6d, 0x22, 0x42, 0x0a, 0x08, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x1a, 0x0a,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x31, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x31, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x6e, 0x64, 0x32, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x6e, 0x64, 0x32, 0x22, 0x37, 0x0a, 0x0a, 0x53, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x75, 0x6d, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x6e, 0x64, 0x73, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x73, 0x22, 0x26,
	0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x76, 0x67, 0x12, 0x18, 0x0a, 0x07,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x25, 0x0a, 0x0b, 0x53, 0x75, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2a, 0x0a,
	0x0e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x22, 0x54, 0x0a, 0x16, 0x44, 0x65, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x75,
	0x6d, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x31, 0x0a, 0x17, 0x44, 0x65, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x48, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x41, 0x76, 0x65,
	0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x76, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x73, 0x75, 0x6d, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x76, 0x67,
	0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x6e, 0x64, 0x41, 0x76, 0x67, 0x22, 0x30, 0x0a, 0x16,
	0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x22,
	0x0a, 0x0e, 0x46, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e,
	0x75, 0x6d, 0x22, 0x29, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x2b, 0x0a,
	0x11, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x12, 0x53, 0x71,
	0x75, 0x61, 0x72, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x6f, 0x6f,
	0x74, 0x32, 0xd8, 0x02, 0x0a, 0x0c, 0x47, 0x72, 0x65, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x2a, 0x0a, 0x03, 0x53, 0x75, 0x6d, 0x12, 0x0f, 0x2e, 0x73, 0x75, 0x6d, 0x2e,
	0x53, 0x75, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x73, 0x75, 0x6d,
	0x2e, 0x53, 0x75, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50,
	0x0a, 0x0f, 0x44, 0x65, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x1b, 0x2e, 0x73, 0x75, 0x6d, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73,
	0x65, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x73, 0x75, 0x6d, 0x2e, 0x44, 0x65, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x65, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x4d, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x41, 0x76, 0x65, 0x72, 0x61,
	0x67, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x75, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65,
	0x41, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x73, 0x75, 0x6d, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x41, 0x76, 0x65, 0x72,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x12,
	0x3a, 0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x12, 0x13, 0x2e, 0x73, 0x75, 0x6d,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x73, 0x75, 0x6d, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x6d, 0x61, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x3f, 0x0a, 0x0a, 0x53,
	0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x75, 0x6d, 0x2e,
	0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x73, 0x75, 0x6d, 0x2e, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x6f,
	0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x07, 0x5a, 0x05,
	0x73, 0x75, 0x6d, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_calculator_sumpb_sum_proto_rawDescOnce sync.Once
	file_calculator_sumpb_sum_proto_rawDescData = file_calculator_sumpb_sum_proto_rawDesc
)

func file_calculator_sumpb_sum_proto_rawDescGZIP() []byte {
	file_calculator_sumpb_sum_proto_rawDescOnce.Do(func() {
		file_calculator_sumpb_sum_proto_rawDescData = protoimpl.X.CompressGZIP(file_calculator_sumpb_sum_proto_rawDescData)
	})
	return file_calculator_sumpb_sum_proto_rawDescData
}

var file_calculator_sumpb_sum_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_calculator_sumpb_sum_proto_goTypes = []interface{}{
	(*Operands)(nil),                // 0: sum.Operands
	(*SumRequest)(nil),              // 1: sum.SumRequest
	(*OperandAvg)(nil),              // 2: sum.OperandAvg
	(*SumResponse)(nil),             // 3: sum.SumResponse
	(*Operand_Number)(nil),          // 4: sum.Operand_Number
	(*DecomposenumberRequest)(nil),  // 5: sum.DecomposenumberRequest
	(*DecomposenumberResponse)(nil), // 6: sum.DecomposenumberResponse
	(*ComputeAverageRequest)(nil),   // 7: sum.ComputeAverageRequest
	(*ComputeAverageResponse)(nil),  // 8: sum.ComputeAverageResponse
	(*FindmaxRequest)(nil),          // 9: sum.FindmaxRequest
	(*FindmaxResponse)(nil),         // 10: sum.FindmaxResponse
	(*SquareRootRequest)(nil),       // 11: sum.SquareRootRequest
	(*SquareRootResponse)(nil),      // 12: sum.SquareRootResponse
}
var file_calculator_sumpb_sum_proto_depIdxs = []int32{
	0,  // 0: sum.SumRequest.operands:type_name -> sum.Operands
	4,  // 1: sum.DecomposenumberRequest.operand_Number:type_name -> sum.Operand_Number
	2,  // 2: sum.ComputeAverageRequest.operandAvg:type_name -> sum.OperandAvg
	1,  // 3: sum.GreetService.Sum:input_type -> sum.SumRequest
	5,  // 4: sum.GreetService.Decomposenumber:input_type -> sum.DecomposenumberRequest
	7,  // 5: sum.GreetService.ComputeAverage:input_type -> sum.ComputeAverageRequest
	9,  // 6: sum.GreetService.Findmax:input_type -> sum.FindmaxRequest
	11, // 7: sum.GreetService.SquareRoot:input_type -> sum.SquareRootRequest
	3,  // 8: sum.GreetService.Sum:output_type -> sum.SumResponse
	6,  // 9: sum.GreetService.Decomposenumber:output_type -> sum.DecomposenumberResponse
	8,  // 10: sum.GreetService.ComputeAverage:output_type -> sum.ComputeAverageResponse
	10, // 11: sum.GreetService.Findmax:output_type -> sum.FindmaxResponse
	12, // 12: sum.GreetService.SquareRoot:output_type -> sum.SquareRootResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_calculator_sumpb_sum_proto_init() }
func file_calculator_sumpb_sum_proto_init() {
	if File_calculator_sumpb_sum_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_calculator_sumpb_sum_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operands); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_sumpb_sum_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SumRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_sumpb_sum_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OperandAvg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_sumpb_sum_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SumResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_sumpb_sum_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Operand_Number); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_sumpb_sum_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecomposenumberRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_sumpb_sum_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecomposenumberResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_sumpb_sum_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeAverageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_sumpb_sum_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputeAverageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_sumpb_sum_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindmaxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_sumpb_sum_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindmaxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_sumpb_sum_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SquareRootRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculator_sumpb_sum_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SquareRootResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_calculator_sumpb_sum_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_calculator_sumpb_sum_proto_goTypes,
		DependencyIndexes: file_calculator_sumpb_sum_proto_depIdxs,
		MessageInfos:      file_calculator_sumpb_sum_proto_msgTypes,
	}.Build()
	File_calculator_sumpb_sum_proto = out.File
	file_calculator_sumpb_sum_proto_rawDesc = nil
	file_calculator_sumpb_sum_proto_goTypes = nil
	file_calculator_sumpb_sum_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GreetServiceClient is the client API for GreetService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreetServiceClient interface {
	//unary
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	Decomposenumber(ctx context.Context, in *DecomposenumberRequest, opts ...grpc.CallOption) (GreetService_DecomposenumberClient, error)
	ComputeAverage(ctx context.Context, opts ...grpc.CallOption) (GreetService_ComputeAverageClient, error)
	Findmax(ctx context.Context, opts ...grpc.CallOption) (GreetService_FindmaxClient, error)
	//error handling
	//this RPC will throw error if sent number is negative
	//the error being sent is of type INVALID_ARGUMENT
	SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error)
}

type greetServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewGreetServiceClient(cc grpc.ClientConnInterface) GreetServiceClient {
	return &greetServiceClient{cc}
}

func (c *greetServiceClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/sum.GreetService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greetServiceClient) Decomposenumber(ctx context.Context, in *DecomposenumberRequest, opts ...grpc.CallOption) (GreetService_DecomposenumberClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GreetService_serviceDesc.Streams[0], "/sum.GreetService/Decomposenumber", opts...)
	if err != nil {
		return nil, err
	}
	x := &greetServiceDecomposenumberClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GreetService_DecomposenumberClient interface {
	Recv() (*DecomposenumberResponse, error)
	grpc.ClientStream
}

type greetServiceDecomposenumberClient struct {
	grpc.ClientStream
}

func (x *greetServiceDecomposenumberClient) Recv() (*DecomposenumberResponse, error) {
	m := new(DecomposenumberResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *greetServiceClient) ComputeAverage(ctx context.Context, opts ...grpc.CallOption) (GreetService_ComputeAverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GreetService_serviceDesc.Streams[1], "/sum.GreetService/ComputeAverage", opts...)
	if err != nil {
		return nil, err
	}
	x := &greetServiceComputeAverageClient{stream}
	return x, nil
}

type GreetService_ComputeAverageClient interface {
	Send(*ComputeAverageRequest) error
	CloseAndRecv() (*ComputeAverageResponse, error)
	grpc.ClientStream
}

type greetServiceComputeAverageClient struct {
	grpc.ClientStream
}

func (x *greetServiceComputeAverageClient) Send(m *ComputeAverageRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *greetServiceComputeAverageClient) CloseAndRecv() (*ComputeAverageResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(ComputeAverageResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *greetServiceClient) Findmax(ctx context.Context, opts ...grpc.CallOption) (GreetService_FindmaxClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GreetService_serviceDesc.Streams[2], "/sum.GreetService/Findmax", opts...)
	if err != nil {
		return nil, err
	}
	x := &greetServiceFindmaxClient{stream}
	return x, nil
}

type GreetService_FindmaxClient interface {
	Send(*FindmaxRequest) error
	Recv() (*FindmaxResponse, error)
	grpc.ClientStream
}

type greetServiceFindmaxClient struct {
	grpc.ClientStream
}

func (x *greetServiceFindmaxClient) Send(m *FindmaxRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *greetServiceFindmaxClient) Recv() (*FindmaxResponse, error) {
	m := new(FindmaxResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *greetServiceClient) SquareRoot(ctx context.Context, in *SquareRootRequest, opts ...grpc.CallOption) (*SquareRootResponse, error) {
	out := new(SquareRootResponse)
	err := c.cc.Invoke(ctx, "/sum.GreetService/SquareRoot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GreetServiceServer is the server API for GreetService service.
type GreetServiceServer interface {
	//unary
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	Decomposenumber(*DecomposenumberRequest, GreetService_DecomposenumberServer) error
	ComputeAverage(GreetService_ComputeAverageServer) error
	Findmax(GreetService_FindmaxServer) error
	//error handling
	//this RPC will throw error if sent number is negative
	//the error being sent is of type INVALID_ARGUMENT
	SquareRoot(context.Context, *SquareRootRequest) (*SquareRootResponse, error)
}

// UnimplementedGreetServiceServer can be embedded to have forward compatible implementations.
type UnimplementedGreetServiceServer struct {
}

func (*UnimplementedGreetServiceServer) Sum(context.Context, *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedGreetServiceServer) Decomposenumber(*DecomposenumberRequest, GreetService_DecomposenumberServer) error {
	return status.Errorf(codes.Unimplemented, "method Decomposenumber not implemented")
}
func (*UnimplementedGreetServiceServer) ComputeAverage(GreetService_ComputeAverageServer) error {
	return status.Errorf(codes.Unimplemented, "method ComputeAverage not implemented")
}
func (*UnimplementedGreetServiceServer) Findmax(GreetService_FindmaxServer) error {
	return status.Errorf(codes.Unimplemented, "method Findmax not implemented")
}
func (*UnimplementedGreetServiceServer) SquareRoot(context.Context, *SquareRootRequest) (*SquareRootResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SquareRoot not implemented")
}

func RegisterGreetServiceServer(s *grpc.Server, srv GreetServiceServer) {
	s.RegisterService(&_GreetService_serviceDesc, srv)
}

func _GreetService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreetServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.GreetService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreetServiceServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GreetService_Decomposenumber_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DecomposenumberRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GreetServiceServer).Decomposenumber(m, &greetServiceDecomposenumberServer{stream})
}

type GreetService_DecomposenumberServer interface {
	Send(*DecomposenumberResponse) error
	grpc.ServerStream
}

type greetServiceDecomposenumberServer struct {
	grpc.ServerStream
}

func (x *greetServiceDecomposenumberServer) Send(m *DecomposenumberResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _GreetService_ComputeAverage_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GreetServiceServer).ComputeAverage(&greetServiceComputeAverageServer{stream})
}

type GreetService_ComputeAverageServer interface {
	SendAndClose(*ComputeAverageResponse) error
	Recv() (*ComputeAverageRequest, error)
	grpc.ServerStream
}

type greetServiceComputeAverageServer struct {
	grpc.ServerStream
}

func (x *greetServiceComputeAverageServer) SendAndClose(m *ComputeAverageResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *greetServiceComputeAverageServer) Recv() (*ComputeAverageRequest, error) {
	m := new(ComputeAverageRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _GreetService_Findmax_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GreetServiceServer).Findmax(&greetServiceFindmaxServer{stream})
}

type GreetService_FindmaxServer interface {
	Send(*FindmaxResponse) error
	Recv() (*FindmaxRequest, error)
	grpc.ServerStream
}

type greetServiceFindmaxServer struct {
	grpc.ServerStream
}

func (x *greetServiceFindmaxServer) Send(m *FindmaxResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *greetServiceFindmaxServer) Recv() (*FindmaxRequest, error) {
	m := new(FindmaxRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _GreetService_SquareRoot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SquareRootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreetServiceServer).SquareRoot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sum.GreetService/SquareRoot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreetServiceServer).SquareRoot(ctx, req.(*SquareRootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GreetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sum.GreetService",
	HandlerType: (*GreetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _GreetService_Sum_Handler,
		},
		{
			MethodName: "SquareRoot",
			Handler:    _GreetService_SquareRoot_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Decomposenumber",
			Handler:       _GreetService_Decomposenumber_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ComputeAverage",
			Handler:       _GreetService_ComputeAverage_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Findmax",
			Handler:       _GreetService_Findmax_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "calculator/sumpb/sum.proto",
}
